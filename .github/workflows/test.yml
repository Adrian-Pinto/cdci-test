name: Remove File on Pull Request

on:
  pull_request:
    types: [opened]

jobs:
  remove_file:
    runs-on: ubuntu-latest

    steps:
      - name: Set Git user information
        run: |
          git config --global user.name "Git Action"
          git config --global user.email "none@example.com"

      - name: Check if the base branch is 'master' and the head branch is 'develop'
        run: |
          if [[ "${{ github.event.pull_request.base.ref }}" == "master" && "${{ github.event.pull_request.head.ref }}" == "develop" ]]; then
            echo "Base branch is 'master', and head branch is 'develop'. Proceeding with the workflow..."
          else
            echo "This pull request does not match the specified branches. Skipping the workflow."
            exit 0
          fi

      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}

      - name: Fetch the 'develop' branch reference
        run: git fetch origin develop:refs/remotes/origin/${{ github.event.pull_request.head.ref }}

      - name: Create a temporary branch for the pull request
        run: |
          git checkout ${{ github.event.pull_request.head.ref }}
          git checkout -b temp-branch 

      - name: Remove the file
        run: |
          git rm .github/workflows/deploy.yml
          git rm .github/workflows/test.yml
          git commit -m "Clear deploy file" --no-verify

      - name: Push changes to the temporary branch
        run: git push origin temp-branch

      - name: Create Pull Request
        id: create_pr
        run: |
          PR_URL=$(curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"title": "Automated Pull Request", "head": "${{ github.repository_owner }}:temp-branch", "base": "${{ github.event.pull_request.head.ref }}", "body": "This is an automated pull request created by GitHub Actions."}' \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ github.repository#*/ }}/pulls | jq -r '.html_url')

          echo "::set-output name=pr_url::$PR_URL"

      - name: Wait for Pull Request Checks
        uses: softprops/action-gh-wait@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_name: "Continuous Integration"  # Replace with the name of your CI check

      - name: Merge Pull Request
        if: steps.create_pr.outputs.pr_url != ''
        run: |
          PR_NUMBER=$(echo ${{ steps.create_pr.outputs.pr_url }} | awk -F '/' '{print $NF}')
          echo "Merging Pull Request $PR_NUMBER"
          curl -X PUT \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ github.repository#*/ }}/pulls/$PR_NUMBER/merge

      - name: Wait for the pull request to be merged
        run: |
          sleep 10 # Wait for 10 seconds to give GitHub time to process the pull request

      - name: Delete the temporary branch
        run: |
          curl -X DELETE -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/git/refs/heads/temp-branch"